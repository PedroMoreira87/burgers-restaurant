name: Burgers Restaurant

on:
  push:
    branches: ['main']
    tags: ['v*']
  pull_request:
    branches: ['main']
  workflow_dispatch:

permissions:
  id-token: write # This is required for requesting the JWT

jobs:
  build_on_pr:
    name: Build on PR
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Run ESLint
        run: npm run eslint

      - name: Build Project
        run: npm run build

  deploy_dev:
    name: Build and Deploy to Dev on Merge to Main
    if: ${{ (github.ref == 'refs/heads/main' && github.event_name == 'push') || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    environment:
      name: Dev

    steps:
      - name: Check out repo code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::654654462173:role/GitHubActionsRole
          aws-region: us-east-1

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Run ESLint
        run: npm run eslint

      - name: Build Project
        run: npm run build

      - name: Sync files to S3
        run: aws s3 sync dist s3://burgers-restaurant --delete

      - name: Invalidate CloudFront Distribution
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

  deploy_on_tag_prod:
    name: Build and Deploy to Prod on Tag
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    environment:
      name: Prod

    steps:
      - name: Check out repo code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::654654462173:role/GitHubActionsRole
          aws-region: us-east-1

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Run ESLint
        run: npm run eslint

      - name: Build Project
        run: npm run build

      - name: Sync files to S3
        run: aws s3 sync dist s3://burgers-restaurant --delete

      - name: Invalidate CloudFront Distribution
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
